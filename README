NAME
    Cache::LRU - a simple, fast implementation of LRU cache in pure perl

SYNOPSIS
        use Cache::LRU;

        my $cache = Cache::LRU->new(
            size => $max_num_of_entries,
        );

        $cache->set($key => $value);

        $value = $cache->get($key);

        $removed_value = $cache->remove($key);

DESCRIPTION
    Cache::LRU is a simple, fast implementation of an in-memory LRU cache in
    pure perl.

FUNCTIONS
  Cache::LRU->new(size => $max_num_of_entries)
    Creates a new cache object. Takes a hash as the only argument. The only
    parameter currently recognized is the "size" parameter that specifies
    the maximum number of entries to be stored within the cache object.

  $cache->get($key)
    Returns the cached object if exists, or undef otherwise.

  $cache->set($key => $value)
    Stores the given key-value pair.

  $cache->remove($key)
    Removes data associated to the given key and returns the old value, if
    any.

AUTHOR
    Kazuho Oku

SEE ALSO
    Cache

    Cache::Ref

    Tie::Cache::LRU

LICENSE
    This program is free software; you can redistribute it and/or modify it
    under the same terms as Perl itself.

    See <http://www.perl.com/perl/misc/Artistic.html>

